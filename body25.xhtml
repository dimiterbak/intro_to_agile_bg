<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xml:lang="en" lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
	<meta charset="utf-8"/>
	<title>Собственик на продукта</title>
	<link type="text/css" rel="stylesheet" href="css/stylesheet.css"/>
</head>
<body>

<p class="titled-section-page-padding"><br /></p>
<div class="titled-section">
<h2 class="bordered-title" id="doc128">СОБСТВЕНИК НА ПРОДУКТА</h2>
<p class="br"><br /></p>

<p>СОБСТВЕНИЪТ НА ПРОДУКТА е един човек, а не комитет. Неговата основна отговорност е да максимизира стойността на продукта произведен от екипа за разработка. Стойността е от гледна точка на клиента, който е поръчал продукта.</p>

<p>Идвята тук е, че екипът за разработка ще свърши работа. Вачното е да произведе такъв продукт, който да се оцени максимално от клиента.</p>

<p>Тоест - най-важната отговорност на собственика на продукта е да разбере какво клиента цени, неговите ценности. И да ги представи на целият Скръм екип като ги визуализира в беклога на продукта. </p>

<p>Затова собственика на продукта управлява беклога на продукта. Какво означава управлява? Нещата в продукт беклога винаги да съответстват на идеяна на клиента за това какво ще представлява продукта. Тоест - да отразява това, което клиента цени.</p>
<p class="br"><br /></p>

<p>Той трябва да е видим, да е прозрачен, да е ясен на всички. Така да е формулиран и описан, че екипът за разработка да може да го разбере. </p>
<p class="br"><br /></p>

<p>—————</p>
<p class="br"><br /></p>

<p>Тук разглеждаме определението за собственик на продукта от ръководството..</p>

<p>Ще преминем през това изречение по изречение.</p>

<p>Собственикът на продукта е отговорен за максимизиране на стойността на продукта и работата на екипа за разработка.</p>
<p class="br"><br /></p>

<p>Тоест той притежаза стойността и възвращаемостта от продукта.</p>

<p>И прави това, като работи с екипа за разработка.</p>

<p>Ето каква е целта му.</p>
<p class="br"><br /></p>

<p>Но това, което прави, ще зависи от контекста.</p>
<p class="br"><br /></p>

<p>Ако смени организациите, това, което прави, може да е много различно.</p>
<p class="br"><br /></p>

<p>Понякога ми задават въпрос като &quot;Как да направя плановете за рилийз” или как да напиша история на потребителя?</p>
<p class="br"><br /></p>

<p>Няма общ отговор на нито един от тези въпроси.</p>
<p class="br"><br /></p>

<p>Няма такова нещо като универсално добра потребителска история.</p>
<p class="br"><br /></p>

<p>Тази потребителска история е начин за комуникация.</p>
<p class="br"><br /></p>

<p>И това ще зависи от това с кого комуникирате.</p>

<p>Така че една чудесна потребителска история в една среда може и да не е чудесна потребителска история в другата среда.</p>
<p class="br"><br /></p>

<p>Така че трябва да адаптирате практиките си към контекста.</p>
<p class="br"><br /></p>

<p>Третото изречение казва, че вие сте отговорни за управлението на беклога на продукта и сте единственият човек кой е отговорен за това.</p>
<p class="br"><br /></p>

<p>Можете да помолите други хора за помощ, но вие сте отговорни.</p>
<p class="br"><br /></p>

<p>Така работата с беклог на продукта включва изразяване на неговоте елементи по начин, който публиката може ясно да разбире.</p>
<p class="br"><br /></p>

<p>Подреждане на беклога на продуктите, за да се постигне максимална стойност на продукта, и за да се постигнат крайните срокове.</p>
<p class="br"><br /></p>

<p>Ако имате крайни срокове във вашата среда, трявва да работи с екипа по отношение на това, което е технически възможно и не е технически възможно.</p>
<p class="br"><br /></p>

<p>Трето, трябва да оптимизирате възвръщаемостта на инвестициите - цената на екипа е повече или по-малко фиксирана. Това са заплатите на екипа.</p>
<p class="br"><br /></p>

<p>Това означава да имаме неумолим фокус върху стойността, което означава дълбоко разбиране на вашата клиентска база.</p>
<p class="br"><br /></p>

<p>За всеки трябва да знае какво има в беклога на продукта.</p>
<p class="br"><br /></p>

<p>Вие сте отговорни за го комуникирате и разяснявате на всички.</p>
<p class="br"><br /></p>

<p>Много често виждам, че някои мениджъри не искат да погледнат във вашия беклог на продукта.</p>
<p class="br"><br /></p>

<p>И така ще трябва да намерите начини за общуване с тях, така че на всички да е ясно как изглежда вашият беклог на продукта.</p>
<p class="br"><br /></p>

<p>И накрая екипа за разработка трябва да разбере елементите на бекллога на продукта, които често ще включва ежедневен разговор с тях.</p>
<p class="br"><br /></p>

<p>Така че кой е отговорен и отговорен за това? Можете да свършите работата. Можете да накарате екипа за разработка да я свърши. Въпреки това оставате отговорни за извършената работа.</p>
<p class="br"><br /></p>

<p>Ето един прост пример.</p>
<p class="br"><br /></p>

<p>Да речем, че искате да знаете дали клиентите използват дадена функция на продукта или не.</p>

<p>Може да направите това като направите заявка в базата</p>

<p>Или може да кажете на екипа за разработка да го направят вместо вас.</p>

<p>Така или иначе вие сте отговорни за него.</p>
<p class="br"><br /></p>

<p>Кой върши работата?</p>

<p>Човекът, който е най-способен да я свърши.</p>
<p class="br"><br /></p>

<p>Собственикът на продукта е едно лице, а не комисия.</p>

<p>Това означава, че можете да говорите с всеки, който искате.</p>

<p>Но в крайна сметка вие вземате решение по същия начин, по който в крайна сметка екипът за разработка взема решения за техническата архитектура.</p>
<p class="br"><br /></p>

<p>Ако някой иска да промени нещо в беклога на продукта.</p>

<p>Имате възможност да обработите тази заявка. Ти решаваш</p>
<p class="br"><br /></p>

<p>Никой не може да вмъква неща в беклога или да променя подредбата му без да разбере какво искаш</p>
<p class="br"><br /></p>
<p class="br"><br /></p>

<p>От решаващо значение е, че собственикът на продукта да е този, който е уважаван от цялата организация</p>

<p>Собственикът на продукта не е човек, който може да бъде критикуван или или пък мнението у да се отхвърли, ако това се случи.</p>
<p class="br"><br /></p>

<p>Това е граница за цялата организация, защото цялата организация, трябва да разбере, че собственикът на продукта е лицето, което отговаря за управлението на беклога и взаимодейства с екипа за разработка.</p>
<p class="br"><br /></p>

<p>Екипът от разработчиците не може да работи с друг набор от изисквания.</p>
<p class="br"><br /></p>

<p>Ако влезе висш мениджър и каже - прави това!, те нарушават този договор и екипът за разработка трябва да има силата и разбирането да поиска от собственика на продукта да приоритизира работата им, да я подреди.</p>
<p class="br"><br /></p>

<p>Вашата ситуация може да е различна от казаното, но то е целта.</p>
<p class="br"><br /></p>

<p>Това е обобщение на това, което прави собственикът на продукта.</p>
<p class="br"><br /></p>
<p class="br"><br /></p>
<p class="br"><br /></p>
<p class="br"><br /></p>
<p class="br"><br /></p>
<p class="br"><br /></p>
<p class="br"><br /></p>
</div>
<p class="separator"><br /></p>
<div class="sub-headed-section">
<h4 class="sub-heading" id="doc129">АНТИ-ШАБЛОНИ</h4>

<p>Анти-шаблон номер едно - да се фокусира върху това “как” и “кога” вместо върху “какво” и “защо”.</p>

<p>Нека поговорим за това “как”.</p>
<p class="br"><br /></p>

<p>Виждал съм, как собствениците на продукти определят в коя таблица да се съхранява информация. Това е “как” не “какво”.</p>

<p>Затова се опитайте да стоите настрана от вземането на технически решения.</p>
<p class="br"><br /></p>

<p>Ето как се случва това.</p>

<p>В бавно движещите се старомодни организации екипът за разработка често се притеснява или се страхува от вземането на технически решения, защото те ще бъдат обвинени по-късно.</p>

<p>И така, те се опитват да прехвърлят отговорността на собственика на продукта, така че по-късно да могат да ни кажат: това решение бе е взето от собственика на продукта.</p>

<p>Така че, това всъщност е основният въпрос за културата на една организация.</p>

<p>Ето защо ви се налага да уточнявате как да работите с вашия Скръм мастър и с мениджърите с цел подобряване и промяна на културата на организацията.</p>

<p>Знам, че това е огромно изискване, но в крайна сметка това е, което ще доведе до високопроизводителна организация.</p>
<p class="br"><br /></p>

<p>Нещо подобно е да дефинирате “кога”. Не можете да решавате какъв обхват ще бъде готов до коя дата - вие само можете да решите кога продуктът е готов за рилийз.</p>

<p>Но не можете да вкарате нова работа в обхвата на следващият рилийз.</p>

<p>Не забравяйте, че обхватът е нещо, което ще откриете т.е колко работа може да се свърши за единица време.</p>

<p>Така че уважавайте способността на екипа да достави работа, не бутайте работата върху екипа за разработка.</p>
<p class="br"><br /></p>

<p>Вторият анти-шаблон е да се държите като ръководител на проекта, фокусиран върху обхвата, бюджета и плана на проекта, вместо да се фокусира върху стойността за клиента.</p>
<p class="br"><br /></p>

<p>Винаги се фокусирайте върху стойността от гледна точка на клиента.</p>

<p>Бъдете абсолютно безкомпромсни за това и всичко останало ще се погрижи само за себе си.</p>
<p class="br"><br /></p>

<p>Не забравяйте, че успешният продукт е продукт с висока стойност, а не продукт, който е завършил навреме и без да надхвърля бюджета. Колкото по-близо стигнете до това, толкова по-добре ще бъдете и по-добре ще бъде вашата компания.</p>

<p>Отново ще спомена, че това може да бъде значителна културна промяна във вашата организация</p>
<p class="br"><br /></p>
<p class="br"><br /></p>

<p>А третият и последен анти-шаблон е да се съсредоточите върху вътрешните заинтересовани страни вместо върху плащащия клиент.</p>

<p>Идентифицирайте клиента, който плаща и се уверете, че са щастливи.</p>
<p class="br"><br /></p>

<p>Живейте техения живот, имайте много близка връзка с тях и ще създадете продукт, който вашата компания може да продава.</p>
<p class="br"><br /></p>

<p>Ако вместо това твърде много се фокусирате върху вътрешните заинтересовани страни?</p>
<p class="br"><br /></p>

<p>Докато те със сигурност са ограничение и нещо, за което трябва да се погрижите, но това няма да доведе до дългосрочен успех, защото вашите вътрешни заинтересовани страни, независимо колко мощни са те не са клиентът на вашият продукт.</p>

<p>Не са тези, които плащат пари, които пък правят вашата организация успешна.</p>

<p>Плащащият клиент трябва да бъде фикуса ви.</p>
<p class="br"><br /></p>

<p>Така че това са три анти-шаблони, които съм виждал:</p>

<ul>
<li>Собственика на продукта се фокусира върху това “как” и “кога” вместо това “какво” и “защо”.</li>
<li>Управлява екипа като ръководител на проекъ, вместо да се фокусира върху стойността</li>
<li>Фокусира се върху това, което вътрешните заинтересовани страни искат,а не върху това което плащащият клиентът желае.</li>
</ul>
<p class="br"><br /></p>

<p>Така че избягвайте описаните анти-шаблони и ще бъдете много по-добър собствемник на продукт.</p>
<p class="br"><br /></p>
</div>
<p class="separator"><br /></p>
<div class="sub-headed-section">
<h4 class="sub-heading" id="doc130">ОПРЕДЕЛЯНЕ НА СТОЙНОСТТА И ПОДРЕЖДАНЕ НА БЕКЛОГА НА ПРОДУКТА</h4>

<p>Страхотните собственици на продукти се концентрират неуморно върху изживяването на клиентите:</p>

<p>&quot;Ако има една причина да се спправим по-добре от нашите колеги в интернет пространството през последните шест години, то е защото сме се фокусирали като лазер върху потребителското изживяване и това наистина има значение, мисля, във всеки бизнес.&quot; - Джеф Безос, Amazon.com</p>
<p class="br"><br /></p>

<p>——</p>

<p>Собствениците на продукти са отговорни за максимизиране на стойността на продукта т.е. собственика на продукта е главен изпълнителен директор на продукта.</p>
<p class="br"><br /></p>
<h4 class="heading-2">Определяне на стойността </h4>
<p class="br"><br /></p>

<p>Това е старата срещу новата школа за определяне на стойността и поръчване на подреждане на беклога на продукта.</p>
<p class="br"><br /></p>

<p>Нека да започнем със старата школа - долу е диаграмата, която описва стъпките, през които един собственик на продукт ще следва. Описаното може да прилича на процесът за разработване на нови продукти във вашата фирма. В такъв случай ви насърчавам да погледнете този модел, защото той върши чудесна работа за описване на старата школа.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic19.png" alt="" id="pastedgraphic19" style="width:100%;" /></div>

<p>Започваме най-горе в ляво с разбиране на пазара и след това вървим по квадратчетата на диаграмата чак до дясната страна, където подържаме продажбите на продукта.</p>
<p class="br"><br /></p>

<p>Така че нека започнем с проблемите на пазара. Трябва да разберем проблемите на пазара интервюирайки клиентите често чрез използване на анкети. Една от характеристиките на старата школа е, че говорим много, но не правим много прототипи или пък тестове.</p>

<p>След твоа трябва да се идентифицират силните и слабите страни на конкурентите и алтернативите.</p>

<p>После трябва да преценим силните си страни - в какво е добра нашата компания, в какво не е добра?</p>

<p>После трябва да позиционираме нашият продукт, така че той да направи нещо, което е по-добро или различно.</p>

<p>След това трябва да се фокусираме върху стратегията за дистрибуция - след като имате продукт, как ще го продадем, как клиента ще го получи т.е. определяме каналите.</p>

<p>После преглеждаме продуктовото портфолио ако вече имаме продукти в избраният пазар. Обмисляме как всички те ще работят заедно и как да управляваме продуктите, така че те да са прости и лесни за разбиране от гледна точка на клиентите</p>

<p>След това идва продуктовата карта - как ще разработим продукта, какви ще бъдат различните фази, какви различни характеристики и функционалности на продукта ще бъдат пуснати на оазара в края на всяка фаза.</p>

<p>После планираме самият бизнес - да определим бизнес модела, да решим как да ценообразуваме продукта като правим анализ на пазара, дали пазарът е еластичен, или не.</p>

<p>След това трябва да решим дали искаме да закупим компоненти на продукта или да го изпълним целият сами или да направите нещо между средно, като си партнираме с някой, който има част от решението.</p>

<p>Колоната за планиране наистина улавя философията и подхода на метода на старата школа. Всичко тук говори за вътрешни документи - става въпрос за вътрешна работа вътре в сградата.</p>

<p>Досега не видяхме много контакт с клиента, но за сметка на това видяхме много за документи.</p>

<p>Идвята е да отметнем всички тези тези полета и да се уверим, че вътрешните заинтересовани страни разполагат с това, което им е необходимо, за да ни дадат десет милиона за разработване на продукт.</p>

<p>Затова и трябва да имаме комуникация със заинтересованите страни - убедихме всички тези заинтересовани страни да ни напишат чек за десет милиона. Как ще ги информираме за напредъка на проекта?</p>
<p class="br"><br /></p>

<p>Има ли тясно взаимодействие между екипа за разработка и собственика на продукта за действително разработване на продукт? Няма.</p>

<p>Всичко това е мислене в стая - планиране, правене на маркетингови проучвания, разучаване на маркетингови изследвания.</p>

<p>Няма близка връзка между собственика на продукта, клиента и екипа за разработка.</p>
<p class="br"><br /></p>

<p>Това е подходът на старата школа.</p>
<p class="br"><br /></p>

<p>Ето някои от разликите между новата и старата школи.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic20.png" alt="" id="pastedgraphic20" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>Забравете идеята за изчисляване на бизнес стойността - това са само измислени числа.</p>
<p class="br"><br /></p>

<p>Това е основната философия на новия свят.</p>
<p class="br"><br /></p>

<p>Няма значение колко документи напишете, няма значение колко вътрешни хора ви подкрепят.</p>

<p>Няма значение колко екселски файла с финансови модели имате - отговорите не са в главата ви. Те не са във главите на вашите заинтересованите страни. Те не са някъде във вашата компания.</p>

<p>Вие откривате истината за стойността на нещата, като произвеждате неща и излизате в реалния свят той да ги оцени.</p>
<p class="br"><br /></p>

<p>Wтората точка е, че всичко е хипотеза, всичко е предположение.</p>
<p class="br"><br /></p>

<p>Всичко е предположение и затова всичко трябва да бъде строго и научно тествано.</p>

<p>Мненията не се вземат предвид, дори ако те идват от старши вицепрезидент. Пазарът решава кое е правилно и кое не е правилно.</p>

<p>Съответно ключовият въпрос на новата школа, който си задавате за пазара, е колко бързо можете да стигнете до клиента. Дали ще ви отнеме три месеца три седмици или три часа?</p>

<p>Човекът, който може да направи това възможно най-бързо, ще научи най-много.</p>

<p>Който научава най-бързо, печели.</p>
<p class="br"><br /></p>

<p>Моделът тук се нарича Lean стартъп и диаграмата долу е поглед от най-високо ниво.</p>
<p class="br"><br /></p>
<div class="ps2"><img src="images/LeanStartup.png" alt="" id="leanstartup" /></div>
<p class="br"><br /></p>

<p>Вие изграждате нещо, след което измервате ефекта му, след това научавате нещо, след това пак изграждате и т.н. Изграждането не означава създаване на продукт, ами означава създаване на минимален прототип.</p>
<p class="br"><br /></p>

<p>Измерването е необходимо, за да научите нещо. Прототипа може да е разговор с клиент, може да бъде уеб страница, може да бъде Google реклама, може да е PowerPoint с възможност за кликване - най-важното е скоростта, с която минаваме през този цикъл.</p>
<p class="br"><br /></p>

<p>Нека погледнем това малко по-подробно. Това е дъска за валидиране, създадена от Lean startup machine <span style="color: #0B5519; background-color: #FFFEFE"><a href="https://www.leanstartupmachine.com/">https://www.leanstartupmachine.com/</a></span></p>
<p class="br"><br /></p>
<div class="ps2"><img src="images/Validation_Board.png" alt="" id="validation_board" style="width:100%;" /></div>
<p class="br"><br /></p>
<h4 class="heading-2">Стъпки</h4>
<p class="br"><br /></p>

<p>Ето стъпките, по които ще преминете.</p>
<p class="br"><br /></p>

<p>Номер едно каква е вашата визия. Визия - това е идеална представа за това как ще изглежда светът когато изпълним нашата мисия. Нашата мисия е причината, поради която правим новият продукт.</p>
<p class="br"><br /></p>

<p>Визията не трябва да е сложна или трудна. Едно две изречения ще свършат добре.</p>
<p class="br"><br /></p>

<p>Стъпка втора какъв е вашият първи проблем на клиента. Хипотеза.</p>
<p class="br"><br /></p>

<p>Избройте ги в горния ляв ъгъл на дъската за валидиране.</p>

<p>Не забравяйте да ги направите ясни и обективни.</p>

<p>Хипотезата не е - ще опитам нещо и ще видя какво ще се случи.</p>
<p class="br"><br /></p>

<p>Стъпка номер три.</p>
<p class="br"><br /></p>

<p>Създайте предположения чрез мозъчна атака. Предположението е, че всичко, което ако се окаже невярно, ще означава края на вашия бизнес <span style="background-color: #FFFB7F">списък</span>.</p>
<p class="br"><br /></p>

<p>Тези са в долния ляв ъгъл на дъската за валидиране.</p>
<p class="br"><br /></p>

<p>Стъпка номер четири.</p>
<p class="br"><br /></p>

<p>Вземете най-рисковото си предположение и опишете какъв метод ще използвате, за да го тествате и минималните критерии за успех, необходими за валидирането му.</p>
<p class="br"><br /></p>

<p>Не забравяйте, че методът е нещо като разговор с хора или пускане на прототип.</p>
<p class="br"><br /></p>

<p>Минималният критерий за успех показва например, че 5 от 10-те души са в съответствие с вашата хипотеза за проблема на целевите клиенти.</p>
<p class="br"><br /></p>

<p>Стъпка Номер пет: Вашето предположение беше ли потвърдено или анулирано?</p>
<p class="br"><br /></p>

<p>С други думи, то отговори ли на минималните критерии за успех?</p>
<p class="br"><br /></p>

<p>И накрая, ако е анулирана, трябва да сменим посоката.</p>

<p>Това означава да промените хипотезата си за проблема на клиентите.</p>
<p class="br"><br /></p>

<p>Или ако е била потвърдена, продължете с хипотезата си за решение.</p>
<p class="br"><br /></p>

<p>Продължавате да следвате тези стъпки, докато потвърдите проблема на вашият целеви клиент.</p>
<p class="br"><br /></p>

<p>Ние непрекъснато сменяме посоката, докато не потвърдите ипотезата си за проблема на клиентите. След това се премествате към решението и ако трябва сменяте посоката на решението.</p>
<p class="br"><br /></p>

<p>Нека да разгледаме това на дъската за валидиране.</p>
<p class="br"><br /></p>

<p>Стъпка номер 1 е в горния десен ъгъл.</p>
<p class="br"><br /></p>

<p>Определете визията.</p>
<p class="br"><br /></p>

<p>Стъпка номер 2.</p>
<p class="br"><br /></p>

<p>Хипотезата за проблема на клиентите.</p>
<p class="br"><br /></p>

<p>Стъпка номер три: обмислете всички предположения, които правите.</p>
<p class="br"><br /></p>

<p>Стъпка номер четири.</p>
<p class="br"><br /></p>

<p>Изберете най-рисковото предположение, метода, който ще използвате, за да го тествате и критерия за минимален успех.</p>
<p class="br"><br /></p>

<p>След това излезте от сградата и стартирайте експеримента.</p>
<p class="br"><br /></p>

<p>Там ще прекарвате по-голямата част от времето си.</p>
<p class="br"><br /></p>

<p>Ще потвърдите или анулирате предположението си.</p>
<p class="br"><br /></p>

<p>Ако го потвърдите, можете да преминете към хипотезата за решението.</p>
<p class="br"><br /></p>

<p>Ако ли не, трябва да смените хипотезата за проблема на клиента.</p>
<p class="br"><br /></p>

<p>Продължете да сменяте своята хипотеза за проблемите на клиента, докато не бъдат валидирани и след това продължете с хипотезата си за решението.</p>
<p class="br"><br /></p>

<p>Така че начинът, по който четете тази дъска е, че започвате от горния ляв ъгъл.</p>
<p class="br"><br /></p>

<p>Започваме, като оцените и определите кой е вашият клиент и кой е вашият проблем и тези неща вървят заедно в двойка.</p>

<p>Различните клиенти ще имат различни проблеми.</p>
<p class="br"><br /></p>

<p>Движите се назад и напред между клиент и проблем, клиент и проблем, докато не го заковете.</p>

<p>Имате клиентски тип и проблем, който те имат и след това разбирате какво решава проблема на този конкретен клиент.</p>
<p class="br"><br /></p>

<p>Как правите това за всеки клиентски проблем? В долния ляв ъгъл определяте какъв експеримент ще изпълните.</p>
<p class="br"><br /></p>

<p>Изброявате всичките си предположения.</p>

<p>Изброявате всичките си предположения.</p>

<p>Изброявате всички неща, които според вас са верни, но нямат данни за това.</p>
<p class="br"><br /></p>

<p>За да проверите това в жълтата клетка избирате най-рисковото предположение и след това измисляте метод и минимални критерии за потвърждение, .</p>
<p class="br"><br /></p>

<p>Пример за метод е, че проучвате концепцията с 10 клиента и пет от тях да ви кажат, че всъщност имат този проблем. </p>

<p>След това излизате от сградата.</p>

<p>Не правете това вътре във вашата компания. Или валидирате или анулирате, </p>
<p class="br"><br /></p>

<p>Ако потвърдите, тогава продължете напред и гпреминавате от клиент и проблем към решение,.</p>
<p class="br"><br /></p>

<p>Ако го анулирате, тогава трябва да завъртите проблема на клиента и да продължите да опитвате отново и отново, докато не получите нещо, което е потвърдено.</p>
<p class="br"><br /></p>

<p>Нека разгледаме един пример, като първо опишем какво е експеримент.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic21.png" alt="" id="pastedgraphic21" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>Така че първо трябва да имате хипотеза, която може да бъде потвърдена или анулирана.</p>
<p class="br"><br /></p>

<p>Много често виждам, хора да казват - ще опитаме нещо и ще видим какво ще се случи.</p>

<p>Това не е хипотеза, и не е експеримент.</p>
<p class="br"><br /></p>

<p>Ако опитате нещо за да видите какво ще се случи, все нещо ще се случи.</p>

<p>Така че винаги ще валидирате и никога няма да можете да анулирате.</p>
<p class="br"><br /></p>

<p>Друг пример е нещо, което е блудкаво, например - жените смятат, че дрехите им не са по мярка.</p>

<p>Това наистина е предмет на тълкуване.</p>

<p>Опитайте се да направите хипотезата възможно най-обективна и количествена.</p>
<p class="br"><br /></p>

<p>Ето един пример за добра хипотеза: 8 от 10 жени, които са пазарували онлайн през последния месец, са имали поне една дреха, която не е им е била по мярка.</p>

<p>Това е нещо, което може да се провери.</p>
<p class="br"><br /></p>

<p>Второто ключово качество на експеримента е, че той има експериментален метод, който може да бъде репликиран.</p>

<p>Лош пример тук е, ако отидем в търговския център и поговорим с няколко жени - точно какъв начин на мислене? Позволено ли е да прескочите жени, които не изглеждат добре?</p>
<p class="br"><br /></p>

<p>Какво означават няколко жени? Това, което се опитвате да направите тук, е да бъдете колкото е възможно по-ясни и конкретни, за да не се самозаблуждавате.</p>

<p>Това е, което трябва да избягвате тук.</p>
<p class="br"><br /></p>

<p>Всеки човек винаги е много ентусиазиран за своите клиенти, техния проблем и решението му.</p>

<p>И трябва да се пазите от този ентусиазъм и да не се заблуждавате.</p>

<p>Самоизмамата е един от най-големите грехове.</p>
<p class="br"><br /></p>

<p>На трето място, експериментът е обратим.</p>
<p class="br"><br /></p>

<p>Не вреди, ако не се получи.</p>

<p>Идеята е, че ще отхвърлите цял куп неща, преди да намерите нещо, което всъщност работи.</p>
<p class="br"><br /></p>

<p>Всъщност, ако потвърждавате над 50% от хипотезите си, това е индикация, че сте прекалено меки, че сте прекалено добри към себе си.</p>
<p class="br"><br /></p>

<p>Ето един пример за нещо, което не е работещо - да изхарчим 18 месеца и 300 000 долара за изграждане на решение и да видим какво ще се случи на пазара.</p>

<p>Това е просто ужасно, ако в края на тези 18 месеца сте решили, че експериментът е неуспешен.Еха. Това ще струва много.</p>
<p class="br"><br /></p>

<p>Ето нещо, което е обратимо.</p>
<p class="br"><br /></p>

<p>Създайте лек прототип - в идеалния случай времева кутия до ден или два и да видим дали някой щракне върху това.</p>
<p class="br"><br /></p>

<p>Но това са някои от ключовите аспекти на експеримента.</p>
<p class="br"><br /></p>

<p>Не забравяйте да бъдете много строги и много взискателни, за да не се заблуждавате.</p>
<p class="br"><br /></p>

<p>——</p>
<p class="br"><br /></p>

<p>Така че ето отново нашата валидационна дъска.</p>
<p class="br"><br /></p>

<p>Да речем, че съм собственик на продукт и се интересувам от създаването на игри за деца и по-специално физически игри за деца.</p>
<p class="br"><br /></p>

<p>Така че започвам с хипотеза за клиента.</p>
<p class="br"><br /></p>

<p>Моят клиент е нашите деца на възраст между 6 и 9 години. Те са отегчени, защото прекарват целия си ден, играейки с iPad и не се занимават с никакви физически движения.</p>
<p class="br"><br /></p>

<p>Виждате това, което според мен са двете ми най-големи предположения.</p>
<p class="br"><br /></p>

<p>Първото е, че мога да достигна до деца на възраст между 6 и 9 години.</p>
<p class="br"><br /></p>

<p>И второто е дали мога или не мога да преценя, че това е проблемът, който те имат.</p>
<p class="br"><br /></p>

<p>Аз вярвам, че най-рисковото предположение е, че те могат да преценят дали са отегчени или не и че аз мога да преценя дали те наистина са отегчени.</p>
<p class="br"><br /></p>

<p>Слагам най-рисковото ми предположение в жълтата кутия. Определям като метод за проверката му следното: ще проведа разговор на детска площадка с тези деца.</p>

<p>И ако 8 от 10 от тях кажат, че са отегчени, тогава ще потвърдя предположението си.</p>
<p class="br"><br /></p>

<p>Аз провеждам този експеримент и не го потвърждавам.</p>

<p>Открих, че не мога да преценя дали децата са отегчени.</p>
<p class="br"><br /></p>

<p>Но ето какво научих, когато бях на детската площадка.</p>
<p class="br"><br /></p>

<p>Говорих с много родители на деца, които са на възраст между 6 и 9 години и открих, че родителите се страхуват, че децата им прекарат твърде много време като играят с iPad.</p>
<p class="br"><br /></p>

<p>Така че ще променя посоката и в този случай ще променя хипотезата за клиента и хипотезата за проблема.</p>
<p class="br"><br /></p>

<p>Така че сега клиента ми са родители на деца на възраст между 6 и 9 години.</p>

<p>Хипотезата за техният проблем е, че те се страхуват, че децата им просто ще продължат да играят на iPads и няма да научат никаква физическа игра.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic22.png" alt="" id="pastedgraphic22" style="width:100%;" /></div>

<p>Така че това, което правя сега, е да изтрия всичко в долния ляв ъгъл - проектиране на експерименти. Ще запазя най-рискованото предположение и анулираният експеримент, защото това е история на експериментите, които съм правил.</p>
<p class="br"><br /></p>

<p>Така че сега новите карти тук в дизайна на експеримент са предположения за първия пивот.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic23.png" alt="" id="pastedgraphic23" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>Първото ми предположение е, че родителите се интересуват за физическата игра.</p>

<p>Може би те нямат нищо против децата да играят на техните iPad-и по цял ден?</p>
<p class="br"><br /></p>

<p>Второто голямо предположение е, че те смятат това за критичен въпрос</p>

<p>Аз ще измисля разговор, който да водя с тях, за да определя дали те смятат, че това е критичен въпрос.</p>
<p class="br"><br /></p>

<p>I'll once again go to a playground and talk to parents of kids that are between the age of 6 and 9 and this time since I have a little bit of accidents already that this is OK</p>

<p>I'm going to be comfortable with four out of nine if four out of nine parents think that this is a critical issue.</p>
<p class="br"><br /></p>

<p>I'm going to proceed and this time it is validated.</p>
<p class="br"><br /></p>

<p>It is a critical issue for kids.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic24.png" alt="" id="pastedgraphic24" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>So now I'm going to copy over parents and scared as my custom my hypothesis or my problem hypothesis and I'm not going to go to solution.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic25.png" alt="" id="pastedgraphic25" style="width:100%;" /></div>

<p>And what I'll do now is I'll continue pivoting on the solution until I find one using the same procedure.</p>
<p class="br"><br /></p>

<p>So again I leave invalidated and validated that's my history and I start off with assumptions about wooden blocks.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic26.png" alt="" id="pastedgraphic26" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>Are parents OK with what and is it the case that I'm not already duplicating something and I'll continue doing this again and again and again until I find a solution and then I'll think about productizing this.</p>
<p class="br"><br /></p>

<p>So this is the way to use build measure or learn in a very tight feedback loop constantly getting out of the building and talking to the customer and validating your customer your problem and your solution.</p>
<p class="br"><br /></p>

<p>You'll be doing an extended example of this in the next video.</p>
<p class="br"><br /></p>

<p>Here's another example.</p>
<p class="br"><br /></p>

<p>How did I go about developing this course.</p>
<p class="br"><br /></p>

<p>I didn't talk to people.</p>
<p class="br"><br /></p>

<p>I didn't look at a market survey.</p>
<p class="br"><br /></p>

<p>I didn't see who was going to various types of workshops.</p>
<p class="br"><br /></p>

<p>What I did was I created six nearly identical Google ads.</p>
<p class="br"><br /></p>

<p>They all had the same detailed explanation.</p>
<p class="br"><br /></p>

<p>Here it says detailed step by step guidance with the videos and checklists.</p>
<p class="br"><br /></p>

<p>The only difference is the title How to Be a part owner how to be a scrum master facilitating agile</p>
<p class="br"><br /></p>

<p>meetings and so forth.</p>
<p class="br"><br /></p>

<p>And then I looked at who clicked on what.</p>
<p class="br"><br /></p>

<p>So if you hear see here on the right hand side 70 percent of the clicks were for the product owner and</p>
<p class="br"><br /></p>

<p>12 percent of the clicks were for a scrum master.</p>
<p class="br"><br /></p>

<p>So product owner was a huge huge area of interest.</p>
<p class="br"><br /></p>

<p>I validated in another way I looked at visits to balance pages.</p>
<p class="br"><br /></p>

<p>These are landing pages which attempt to sell the course and once again you see that how to be a product owner at 121 visitors and how to be a scrum master and 68 visitors.</p>
<p class="br"><br /></p>

<p>So how to be a product owner was again more than twice as much as how to be a scrum master which was number two.</p>
<p class="br"><br /></p>

<p>The numbers are slightly different than in the Google ad words but they still show how to be a product owner is the number one issue that people are facing.</p>
<p class="br"><br /></p>

<p>And so these two pieces of evidence were enough for me to go ahead and start developing this course and then of course I validated all of the individual content by actually communicating and doing experiments with product owners and potential clients of course </p>
<p class="br"><br /></p>

<p>Design thinking is another way of looking at this.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic27.png" alt="" id="pastedgraphic27" style="width:100%;" /></div>

<p>You start off with empathising with the customer in a way that it's similar to what I've described here.</p>
<p class="br"><br /></p>

<p>You define the issues right.</p>
<p class="br"><br /></p>

<p>Spend a lot of time on empathizing eyes and define.</p>
<p class="br"><br /></p>

<p>In fact I've heard people say that you should spend over 50 percent of your time in this area.</p>
<p class="br"><br /></p>

<p>Then go wide and engage in divergent thinking prototype things and test them.</p>
<p class="br"><br /></p>

<p>So here's a great example of this at Travelocity.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic29.png" alt="" id="pastedgraphic29" style="width:100%;" /></div>

<p>Back in the day Travelocity allowed you to buy a hotel by an airplane fare or rent a car and they wanted to know if people wanted to buy packages.</p>
<p class="br"><br /></p>

<p>So they did a one week test where they simply added the button that said hotel plus air. that button did absolutely nothing.</p>
<p class="br"><br /></p>

<p>All it did was lead to an error page and all they did in this one week test was count how many times</p>
<p class="br"><br /></p>

<p>someone clicked on that button.</p>
<p class="br"><br /></p>

<p>Right.</p>
<p class="br"><br /></p>

<p>This is an example of going through the entire building measure or learn to form an actual problem.</p>
<p class="br"><br /></p>

<p>That this company had and they discovered that a lot of people clicked on hotel plus air and therefore</p>
<p class="br"><br /></p>

<p>they went ahead to the next step.</p>
<p class="br"><br /></p>

<p>A good question to ask is if you're in the old school world how do you shift management.</p>
<p class="br"><br /></p>

<p>My suggestion is that you start off really really slowly because it's going to take time to change the</p>
<p class="br"><br /></p>

<p>culture of the strategy and the basic facts of everyday work that people do.</p>
<p class="br"><br /></p>

<p>Here's a simple question to start with.</p>
<p class="br"><br /></p>

<p>How many times do we ship a product that did not deliver value.</p>
<p class="br"><br /></p>

<p>This has probably happened many many times in an organization that uses the old school approach a second</p>
<p class="br"><br /></p>

<p>thing you can do is on an individual basis.</p>
<p class="br"><br /></p>

<p>You can one tiny little experiments against the work that you're doing.</p>
<p class="br"><br /></p>

<p>So you can still do the old school stuff while incorporating just like the level of your team.</p>
<p class="br"><br /></p>

<p>Some of the experimental approach that I've described here.</p>
<p class="br"><br /></p>

<p>And then you can share with management what you've learned and then you can ask the bigger question</p>
<p class="br"><br /></p>

<p>should we take this up to the level of you're planning or portfolio planning.</p>
<p class="br"><br /></p>

<p>And finally share case statements.</p>
<p class="br"><br /></p>

<p>Most of this work.</p>
<p class="br"><br /></p>

<p>But newschool method comes from the lean startup and they've got a great Web site which shows case studies.</p>
<p class="br"><br /></p>

<p>So take a look at those case studies.</p>
<p class="br"><br /></p>

<p>We'll be doing that for the homework and share one of those examples with management.</p>
<p class="br"><br /></p>

<p>So that's been an overview of the old school versus the new school approach and now we'll dive into</p>
<p class="br"><br /></p>

<p>the new school approach in the next exercise with the next video.</p>
</div>
<p class="separator"><br /></p>
<div class="sub-headed-section">
<h4 class="sub-heading" id="doc131">BACKLOG REFINEMENT</h4>

<p>Hello robust scrum product owners welcome to backlog refinement you'll be spending a bunch of your time</p>
<p class="br"><br /></p>

<p>refining your backlog.</p>
<p class="br"><br /></p>

<p>It's one of the key leverage points you have to maximize the value being produced by the team.</p>
<p class="br"><br /></p>

<p>Let's start by looking at what the scrum guide says that refinement conversation is about this is that scrum guides dot org.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic30.png" alt="" id="pastedgraphic30" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>It's the act of adding detail estimates in order to items and the product backlog.</p>
<p class="br"><br /></p>

<p>So this video is divided into those three sections.</p>
<p class="br"><br /></p>

<p>This is an ongoing process in which the product owner that's you and the development team collaborate</p>
<p class="br"><br /></p>

<p>on the backlog items.</p>
<p class="br"><br /></p>

<p>And then during backlog refinement which is often a meeting but it doesn't have to be the backlog items</p>
<p class="br"><br /></p>

<p>such as user stories are reviewed by everyone the product owner and the development team and their revised</p>
<p class="br"><br /></p>

<p>sometimes details are added and subtracted.</p>
<p class="br"><br /></p>

<p>Sometimes estimates are given Sometimes the order is changed.</p>
<p class="br"><br /></p>

<p>The scrum team that's every one product on our development team scrum master decides how this is done</p>
<p class="br"><br /></p>

<p>and when it is done often it is a meaning but it can be a series of conversations.</p>
<p class="br"><br /></p>

<p>One cool thing to do for advanced teams is to do it just in time right before you're going to pull an</p>
<p class="br"><br /></p>

<p>end user story.</p>
<p class="br"><br /></p>

<p>You do with.</p>
<p class="br"><br /></p>

<p>That's an advanced practice.</p>
<p class="br"><br /></p>

<p>One tip is that the development team spends no more than 10 percent of their time doing this work.</p>
<p class="br"><br /></p>

<p>Notice that in a 40 hour work week that's several hours of work.</p>
<p class="br"><br /></p>

<p>So set that expectation and notice that the backlog items can be updated at any time by you and I often</p>
<p class="br"><br /></p>

<p>see that happening or product on or discover something during a sprint discover something while discussing</p>
<p class="br"><br /></p>

<p>something with the product owner or the customer and they change the estimates.</p>
<p class="br"><br /></p>

<p>They change that detail.</p>
<p class="br"><br /></p>

<p>They change the order of the items in the backlog.</p>
<p class="br"><br /></p>

<p>Okay.</p>
<p class="br"><br /></p>

<p>So it's typically the case that backlog items are more refined near the top of our backlog but things</p>
<p class="br"><br /></p>

<p>that are about to happen that are about to go into a sprint are super detail hey they're estimated they're</p>
<p class="br"><br /></p>

<p>ordered and then lower in the backlog you have less details for example there may be some stories that</p>
<p class="br"><br /></p>

<p>are still aspects that don't fit into a sprint.</p>
<p class="br"><br /></p>

<p>Okay.</p>
<p class="br"><br /></p>

<p>And it's critical right that any items that the team takes into a sprint right can be finished by the</p>
<p class="br"><br /></p>

<p>team right.</p>
<p class="br"><br /></p>

<p>They meet the definition of done right.</p>
<p class="br"><br /></p>

<p>And typically there's also a definition of ready which we'll discuss which indicates when a product</p>
<p class="br"><br /></p>

<p>backlog item can be taken into a sprint.</p>
<p class="br"><br /></p>

<p>Finally note that the development team is responsible for all estimates their product owner is not allowed</p>
<p class="br"><br /></p>

<p>to push the team to create smaller estimates to get more stuff done.</p>
<p class="br"><br /></p>

<p>But Park ownership takes respect how long the development team is going to take and what their estimates</p>
<p class="br"><br /></p>

<p>are and the product going are going to of course help reduce bus user story to split the story so that</p>
<p class="br"><br /></p>

<p>it's smaller but the product owner should not say hey guys I'm pretty sure that this is a lot smaller</p>
<p class="br"><br /></p>

<p>than you think it is.</p>
<p class="br"><br /></p>

<p>So that's the overall perspective.</p>
<p class="br"><br /></p>

<p>So we're finding is about detail estimates in order and that's how we're going to break down this section.</p>
<p class="br"><br /></p>

<p>So when it comes to detail I'll point out that it's all about collaboration.</p>
<p class="br"><br /></p>

<p>And then we'll talk about five specific areas that definition of writing which describes what it takes</p>
<p class="br"><br /></p>

<p>for a PBI product backlog item to be taken into a sprint we'll see a few more words about acceptance</p>
<p class="br"><br /></p>

<p>criteria.</p>
<p class="br"><br /></p>

<p>I mean I'll talk about whether or not design and business logic need to be ready before the Sprint starts</p>
<p class="br"><br /></p>

<p>and then I'll talk about fitness tests just particularly cool way for the product owner to describe</p>
<p class="br"><br /></p>

<p>the behavior of a system second I'll talk about estimates.</p>
<p class="br"><br /></p>

<p>Here the top level comment is don't bother estimating when it doesn't matter.</p>
<p class="br"><br /></p>

<p>There are many teams that do not estimate user stories.</p>
<p class="br"><br /></p>

<p>They just make sure that they're small enough story points are probably the most common way to estimate</p>
<p class="br"><br /></p>

<p>it on a scrum team that's a way to do it the way I recommend is to use empirical data to create estimates.</p>
<p class="br"><br /></p>

<p>So in fact that doesn't take any time almost whatsoever.</p>
<p class="br"><br /></p>

<p>You're just using the historical data of how long it took a story to complete and they will conclude</p>
<p class="br"><br /></p>

<p>by talking about how to order the backlog first respecting the fact that even though we're trying to</p>
<p class="br"><br /></p>

<p>follow in fast and I can invest stands for independent.</p>
<p class="br"><br /></p>

<p>Sometimes there are dependencies.</p>
<p class="br"><br /></p>

<p>So we need to respect that while creating order.</p>
<p class="br"><br /></p>

<p>I'll talk about business value which is probably the most common way but it has a lot of challenges.</p>
<p class="br"><br /></p>

<p>Moscow is sort of a fun way to order the backlog stands for: must have should have could have would have.</p>
<p class="br"><br /></p>

<p>And then finally cost of delay which is the technique that I recommend.</p>
<p class="br"><br /></p>

<p>So let's talk about detail.</p>
<p class="br"><br /></p>

<p>The most important thing here is that it's all about collaboration between the product owner and the</p>
<p class="br"><br /></p>

<p>development team.</p>
<p class="br"><br /></p>

<p>How much detail is necessary.</p>
<p class="br"><br /></p>

<p>There is no way to know that up front.</p>
<p class="br"><br /></p>

<p>That's something that you'll discover in a conversation with a development team.</p>
<p class="br"><br /></p>

<p>And sometimes you have development teams that need a sentence or two.</p>
<p class="br"><br /></p>

<p>And sometimes they will need much more.</p>
<p class="br"><br /></p>

<p>And over time you as the product owner will discover how much detail is necessary.</p>
<p class="br"><br /></p>

<p>The goal here is to create software. The detail that’s best is the detail that leads to the creationcof the most software and as always try face to face communication instead of written documentation.</p>
<p class="br"><br /></p>

<p>The definition of ready is a great tool that you may want to implement.</p>
<p class="br"><br /></p>

<p>It's totally optional.</p>
<p class="br"><br /></p>

<p>It's the counterpart to the definition of done. Definition of done indicates when a PBI is done.</p>
<p class="br"><br /></p>

<p>The definition of ready indicates when a PBI is ready to be taken into a sprint.</p>
<p class="br"><br /></p>

<p>So here's an example definition of ready.</p>
<p class="br"><br /></p>

<ul>
<li>The story has been estimated</li>
<li>the story is small enough to fit into a sprint.</li>
<li>The story has acceptance criteria.</li>
<li>The user interface design is complete.</li>
</ul>
<p class="br"><br /></p>

<p>So the definition of ready is something that you as the product owner will discuss with a development team.</p>
<p class="br"><br /></p>

<p>And you'd ask what you guys need for a PBI to be ready for you to start developing against it.</p>
<p class="br"><br /></p>

<p>Make sure that you don't turn this into an argument or into a contract where you're arguing that a story is ready and that development team is isn’t. </p>

<p>The goal of this is to be transparent and to be clear.</p>

<p>It's to help collaboration. Make sure it isn't hindering collaboration.</p>
<p class="br"><br /></p>

<p>Acceptance criteria.</p>

<p>How much detail is required and the acceptance criteria.</p>
<p class="br"><br /></p>

<p>Compare these two options.</p>
<p class="br"><br /></p>

<ul>
<li>The check out system will accept all forms of payment</li>
<li>The check out system will accept Amex and Visa.</li>
</ul>
<p class="br"><br /></p>

<p>Sometimes the first one will be best and most appropriate.</p>
<p class="br"><br /></p>

<p>Sometimes the second will be most appropriate.</p>
<p class="br"><br /></p>

<p>What format will you use?</p>
<p class="br"><br /></p>

<p>In a previous module we discussed the Gherkin given when then format.</p>
<p class="br"><br /></p>

<p>Do you want to collaborate with your development team on deciding on an acceptance criteria format that you'll follow on every user story or PBI?</p>
<p class="br"><br /></p>

<p>Design user interface design.</p>
<p class="br"><br /></p>

<p>This is often something that trips people up.</p>
<p class="br"><br /></p>

<p>So you need to decide with your development team whether or not the user interface design needs to be ready at the start of the Sprint and there is no right answer.</p>
<p class="br"><br /></p>

<p>The question here is what works for your team.</p>
<p class="br"><br /></p>

<p>Some organizations have separate design teams that are different from the product development teams and they work independently and they create design which is getting input into product development.</p>
<p class="br"><br /></p>

<p>In other organizations the product owner or the development team do the user interface design in which case it might be appropriate for all of the user interface designed to take place within a sprint in which case it's a series of tasks on a user story or a PBI.</p>
<p class="br"><br /></p>

<p>And a third option is that the product owner does a high level sketch and the details are worked out during a sprint.</p>
<p class="br"><br /></p>

<p>What's the right level of detail for your team?</p>
<p class="br"><br /></p>

<p>This is a completely pragmatic question.</p>
<p class="br"><br /></p>

<p>Something similar is true for business logic.</p>
<p class="br"><br /></p>

<p>How much do you need to specify?</p>
<p class="br"><br /></p>

<p>Compare these two options.</p>
<p class="br"><br /></p>

<p>The software will accept the Social Security numbers which are valid. Or option number two the system will accept Social Security numbers which have nine digits which can be verified using a national registry etc.</p>
<p class="br"><br /></p>

<p>How much detail do you need to provide when it comes to business logic?</p>
<p class="br"><br /></p>

<p>How much of this is a conversation?</p>
<p class="br"><br /></p>

<p>How much needs to be written?</p>
<p class="br"><br /></p>

<p>Even the fundamental question of who is responsible for business logic could come up here. Sometimes business logic is very difficult to separate from the technical details of a technical architecture.</p>
<p class="br"><br /></p>

<p>So you need to be clear about what is business logic and what isn’t.</p>

<p>So those are a few ideas that you can use to understand detail.</p>

<p>My favourite approach is is to use fitness tests.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic31.png" alt="" id="pastedgraphic31" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>So fitness tests are black box tests that simply specify the input and the output.</p>
<p class="br"><br /></p>

<p>They're useful for all sorts of things but they're particularly useful in situations where you have</p>

<p>certain types of calculations.</p>
<p class="br"><br /></p>

<p>For example let's say that you have a multiplication calculation you're building a calculator.</p>
<p class="br"><br /></p>

<p>So you as the product owner would specify inputs like 2 and 5 and specify the output.</p>
<p class="br"><br /></p>

<p>And this table would become part of your acceptance criteria.</p>
<p class="br"><br /></p>

<p>So these are tests that the software will need to pass.</p>
<p class="br"><br /></p>

<p>So this is an example of a way to communicate detail to a development team that I found to be particularly powerful.</p>
<p class="br"><br /></p>

<p>Let's turn now to estimates.</p>

<p>The top level comment I want to make is that you shouldn't worry about estimates when they're not providing value.</p>
<p class="br"><br /></p>

<p>I see lots of scrum teams spending an enormous amount of time estimating PBI and user stores.</p>
<p class="br"><br /></p>

<p>My suggestion is to time box all estimates and simply pick a number and proceed.</p>
<p class="br"><br /></p>

<p>Don't let your team get stuck on estimation.</p>
<p class="br"><br /></p>

<p>That's something that's left over from the waterfall world where the development team is required to provide good estimates and if they fail to do so they get punished.</p>
<p class="br"><br /></p>

<p>An estimate here is just a way to communicate and coordinate the efforts of the team.</p>
<p class="br"><br /></p>

<p>Some of the highest performing scrum teams do not estimate user stories at all.</p>
<p class="br"><br /></p>

<p>They just make sure they are small enough to fit into a sprint and then they count.</p>
<p class="br"><br /></p>

<p>So if they've done 30 stories in the last five sprints than they do 30 stories in the next sprint.</p>
<p class="br"><br /></p>

<p>And if they are moving faster they just add more stories after they're done with their 30.</p>
<p class="br"><br /></p>

<p>And finally don't confuse accuracy and precision. For small items that are going to be done immediately you may need to know what sprint they're going to be done in.</p>
<p class="br"><br /></p>

<p>But for Epic's that won't be done for a year you probably don't need that level of precision.</p>
<p class="br"><br /></p>

<p>Story points are the most familiar way to estimate.</p>
<p class="br"><br /></p>

<p>You're almost certainly already doing this or have heard about this story points are quantized exponential effort.</p>
<p class="br"><br /></p>

<p>They're typically expressed in a Fibonacci sequence 1 2 3 5 8 13.</p>
<p class="br"><br /></p>

<p>So here three ones take the same amount of effort as one three.</p>
<p class="br"><br /></p>

<p>And so you're doing a relative estimation and the standard format is to give each member of the development team cards. So in the example that I gave above of 1 2 3 5 8 13 each time team member would have six cards and then the product presents a user story and each member of the development team selects a card.</p>
<p class="br"><br /></p>

<p>So let's say that everyone selects three and one team member selects two and another team member selects five.</p>
<p class="br"><br /></p>

<p>So those are the high and low estimates the 2 and 5.</p>
<p class="br"><br /></p>

<p>And so those two people would have a conversation they would explain their estimate and then this would be repeated until everyone agrees.</p>
<p class="br"><br /></p>

<p>Again don't overdo this.</p>
<p class="br"><br /></p>

<p>I suggest time boxing this and then simply picking a number.</p>
<p class="br"><br /></p>

<p>You'd have a decision rule.</p>
<p class="br"><br /></p>

<p>I often say just pick something that's approximately in between like an 8 or a 5.</p>
<p class="br"><br /></p>

<p>And if it takes more than 15 minutes to estimate a story you just pick that number and then you take that into the retrospective and you learn from it.</p>
<p class="br"><br /></p>

<p>So don't let your team get stuck on estimation.</p>
<p class="br"><br /></p>

<p>If you're a distributed team try planning poker dot com which is a neat online tool.</p>
<p class="br"><br /></p>

<p>Now, story point estimation has very significant disadvantages.</p>
<p class="br"><br /></p>

<p>In fact Ron Jeffries who might have invented story points says that he might not want to do this anymore. Right. He apologizes for it. There are many problems with story points.</p>
<p class="br"><br /></p>

<p>They can be easily gamed, they don't take into account the wait time between teams.</p>
<p class="br"><br /></p>

<p>So be cautious about how to use Story Points.</p>
<p class="br"><br /></p>

<p>Here's what I recommend instead. I recommend instead you use empirical estimation.</p>
<p class="br"><br /></p>

<p>So you just look at the actual performance of the team and you record how much time it takes to complete a story.</p>
<p class="br"><br /></p>

<p>That's all you do.</p>
<p class="br"><br /></p>

<p>You look at the start time and the finish time and then you use a Monte-Carlo tool to estimte the completion date.</p>
<p class="br"><br /></p>

<p>And this is based on the historical performance of the team.</p>
<p class="br"><br /></p>

<p>All you need to do is input when each PBI or when each user story started the date it started and when</p>
<p class="br"><br /></p>

<p>it finished it will automatically simulate when you're finished your backlog and down below you see a set of simulated burn downs.</p>
<p class="br"><br /></p>

<p>Right.</p>
<p class="br"><br /></p>

<p>This is your path of progress.</p>
<p class="br"><br /></p>

<p>Right.</p>
<p class="br"><br /></p>

<p>And so this doesn't require any estimation whatsoever.</p>
<p class="br"><br /></p>

<p>It doesn't require the development team to guess user stories.</p>
<p class="br"><br /></p>

<p>All you do is use their historical performance and typically you just need a couple of dozen user stories to be completed to start creating these simulations and using empirical estimation.</p>
<p class="br"><br /></p>

<p>So this is a great way to do a release planning.</p>
<p class="br"><br /></p>

<p>Let's talk now about dependencies.</p>
<p class="br"><br /></p>

<p>The goal is to have independent user stories.</p>
<p class="br"><br /></p>

<p>That's the I in INVEST but that does not always happen.</p>
<p class="br"><br /></p>

<p>So you as the product owner should respect technical and product dependencies.</p>

<p>So you need to decide as a product owner how you're going to visualize the dependencies so that you don't order the backlog in a way that doesn't respect them.</p>
<p class="br"><br /></p>

<p>The most common way of implementing ordering is to use business value.</p>

<p>You can use a qualitative assessment like high value medium value low value.</p>
<p class="br"><br /></p>

<p>You can do ROI calculation you can calculate how much money you're going to make and what the cost is and divide the two.</p>
<p class="br"><br /></p>

<p>You can do a net present value calculation.</p>

<p>So net present value discounts future value. So $100 today is worth more than $100 a year from now.</p>
<p class="br"><br /></p>

<p>Just know here that quantifying business value is inaccurate and imprecise.</p>
<p class="br"><br /></p>

<p>And so that's why we spent an entire module on determining value.</p>
<p class="br"><br /></p>

<p>And my recommendation there was to create little experiments in which you actually go into the market as quickly as possible to figure out the value of the work you're doing.</p>
<p class="br"><br /></p>

<p>So business value is like story point estimation.</p>
<p class="br"><br /></p>

<p>You have to be very careful about using it.</p>
<p class="br"><br /></p>

<p>You could spend in a massive amount of time calculating your business value creating complicated financial models and discover that they are way off.</p>
<p class="br"><br /></p>

<p>And so I've got a link in the resources section of this video which gives you additional ways to order your product backlog.</p>
<p class="br"><br /></p>

<p>But we'll take a look at a couple of them right now.</p>
<p class="br"><br /></p>

<p>One of them is called Moscow.</p>
<p class="br"><br /></p>

<p>It's a very simple approach.</p>
<p class="br"><br /></p>

<p>What user stories must you have should have could have and won't have the what have here is the most important.</p>
<p class="br"><br /></p>

<p>It specifically indicates what you're not going to be doing.</p>
<p class="br"><br /></p>

<p>So this is a fun thing to do as a group exercise take all of your user stories put them on sticky notes and then put up four big posters one that says Must-Have one since should have one so we could have one that says won’t have and then organize the stickies into those categories.</p>
<p class="br"><br /></p>

<p>The way that I recommend is to use cost of delay.</p>
<p class="br"><br /></p>

<p>So cost of delay was introduced into the Agile community by Don Reinertsen and David Anderson.</p>
<p class="br"><br /></p>

<p>And here's the fundamental question.</p>
<p class="br"><br /></p>

<p>If you were to delay a user story by a month well that cost you a million dollars or a thousand dollars.</p>
<p class="br"><br /></p>

<p>And David Anderson created sort of for qualitative shapes to describe the cost of delay.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic32.png" alt="" id="pastedgraphic32" style="width:100%;" /></div>

<p>So every user story can be categorized into one of these four times.</p>
<p class="br"><br /></p>

<p>You have to expedite so expedited something like a production bug.</p>
<p class="br"><br /></p>

<p>So for every minute time the impact increases.</p>
<p class="br"><br /></p>

<p>Every time I have this production bug. Every second that it's still there it's costing me a million dollars a day.</p>
<p class="br"><br /></p>

<p>The second type is fixed date. So this is something like regulation. The government has said that by this date I need to have something in place. So if I get it done before then there isn't a lot of value in that. But if I get it done after them then the government is going to charge me a penalty.</p>
<p class="br"><br /></p>

<p>Standard is what most user stories are. There is some value which then flattens out.</p>
<p class="br"><br /></p>

<p>Initially it's considered to be a benefit to the customer and then after that the value just disappears.</p>
<p class="br"><br /></p>

<p>And then finally there's intangible.</p>

<p>Intangible something like technical debt.</p>

<p>So technical that removing it has a little bit of value. And then at some point in time in the far future it prevents the system from functioning in which case the cost goes way up.</p>
<p class="br"><br /></p>

<p>And so qualitatively you can categorize all of your user stories into these four groups and then specifically you can ask this question that Don asks which is is a delay worth a million dollars or a thousand dollars?</p>
<p class="br"><br /></p>

<p>And what's amazing is that when you talk with your stakeholders your talk with your customers about that they will often be a factor of ten differences in what they say.</p>
<p class="br"><br /></p>

<p>So some people will say that a delay of a week will cost a million dollars.</p>

<p>And other people will say what delay of a week will be cost a hundred thousand dollars.</p>
<p class="br"><br /></p>

<p>What a great tool to use for prioritizing to order your backlog.</p>
<p class="br"><br /></p>

<p>So that's backlog refinement.</p>
<p class="br"><br /></p>

<p>Remember it's something that's done collaboratively with the development team and it's something that can be done either in a meeting or in a series of conversations.</p>
<p class="br"><br /></p>

<p>I know you're going to enjoy doing this.</p>
</div>
<p class="separator"><br /></p>
<div class="sub-headed-section">
<h4 class="sub-heading" id="doc132">ПЛАНИРАНЕ НА СПРИНТА</h4>

<p>Let's start off by going through what the scrum guide says the Sprint planning meeting is about and then we'll focus on specific practices for you to consider on your team.</p>
<p class="br"><br /></p>

<p>So this guide addresses three things.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic33.png" alt="" id="pastedgraphic33" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>What can be delivered during a sprint.</p>
<p class="br"><br /></p>

<p>How will it be delivered and what is the sprint goal.</p>
<p class="br"><br /></p>

<p>So we'll go through those items first and then we'll talk about specific practices for each one.</p>
<p class="br"><br /></p>

<p>Here's the scrum guide’s overview of Sprint planning.</p>
<p class="br"><br /></p>

<p>Remember that you can get this at scrum guides dot org.</p>
<p class="br"><br /></p>

<p>I've put in bold certain items that I want you as the product owner to focus on.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic34.png" alt="" id="pastedgraphic34" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>So the Sprint begins with Sprint planning and the result of the Sprint planning meeting is a plan that is created by the entire scrum team. Sprint planning is time=boxed to a maximum of eight hours for a one month sprint.</p>
<p class="br"><br /></p>

<p>During Sprint planning two questions are answered.</p>
<p class="br"><br /></p>

<ul>
<li>Number one is what can be delivered.</li>
<li>And number two how will the work be delivered.</li>
</ul>
<p class="br"><br /></p>

<p>Let's take each of those in turn.</p>
<p class="br"><br /></p>

<p>So topic number one is what can be done in this sprint.</p>
<p class="br"><br /></p>

<p>So that development team forecasts the functionality it used to be the case that the development team would make a commitment. We no longer use that language.</p>

<p>We now forecast the functionality.</p>
<p class="br"><br /></p>

<p>The product owner is responsible for discussing the objective of the sprint and which PBIs will need to meeting that objective if they're completed correctly.</p>
<p class="br"><br /></p>

<p>And so if that's what you need to be prepared to do going into Sprint planning and that's the goal of all of the refinement work that you're doing.</p>

<p>The entire team is working together to understand the work of the sprint.</p>
<p class="br"><br /></p>

<p>So you are the product owner are responsible for having the product backlog ready and refined. The development team understands the software that it's developed so far.</p>

<p>And then also understands how much work they believe they can get done during a sprint.</p>
<p class="br"><br /></p>

<p>Critically the number of items selected from the backlog is solely up to the development team. The product owner shouldn't try to push or convince the development team to do more work.</p>
<p class="br"><br /></p>

<p>And then after the team forecast the PBIs is then a crafts a sprint goal and the sprint goal is a unifying objective that gives the development team guidance on why it is building the increment.</p>
<p class="br"><br /></p>

<p>And remember that the entire scrum team that's you the product owner the scrum development team and the scrum master work together on crafting the Sprint goal.</p>
<p class="br"><br /></p>

<p>Once you've figured out what's going to be done you have to answer the question how will it be done. And this is primarily the responsibility of the development team.</p>

<p>So it has to define how it will build the functionality and get it to Done.</p>
<p class="br"><br /></p>

<p>The PBIs selected for this sprint plus the plan for delivering them - those two items together are called the Sprint backlog.</p>
<p class="br"><br /></p>

<p>And so the development team typically goes through a set of steps.</p>

<p>They have to sometimes estimate the effort and sometimes they have to forecast what can be done in the upcoming Sprint.</p>
<p class="br"><br /></p>

<p>Typically they will decompose the work that they're doing during the first few days of the sprint down into little tiny tasks or unit of work.</p>
<p class="br"><br /></p>

<p>The development team is self organizing.</p>
<p class="br"><br /></p>

<p>So part two is primarily about the development team figuring out how it's going to do the work.</p>

<p>But the PO does have a critical role.</p>

<p>Namely PO will help to clarify the backlog items.</p>
<p class="br"><br /></p>

<p>So typically during Part one you're playing a very active role.</p>

<p>During part two you're in the room and you're listening to the development team and they can ask you questions and you can help them make tradeoffs.</p>
<p class="br"><br /></p>

<p>And then by the end of topic tow to the development team needs to be able to explain to you how they're going to execute on the Sprint backlog items and they're responsible for doing this on an ongoing basis throughout the sprint.</p>
<p class="br"><br /></p>

<p>And the final topic is the sprint goal.</p>
<p class="br"><br /></p>

<p>So at the end of the meeting once everything has been decided you decide on a sprint goal which is typically a sentence or two that describes at a high level what that team will be delivering.</p>
<p class="br"><br /></p>

<p>And it gives the development team some flexibility about what PBI what functionality they will implement within the spread.</p>
<p class="br"><br /></p>

<p>Okay.</p>
<p class="br"><br /></p>

<p>And so if the work turns out to be different than what the development team expected they may negotiate with you to change the Sprint backlog within the sprint.</p>
<p class="br"><br /></p>

<p>So that's the top level view of what the Sprint planning meeting is.</p>
<p class="br"><br /></p>

<p>Let's turn now to practices starting with what can be delivered during a sprint.</p>
<p class="br"><br /></p>

<p>The standard approach is to calculate based on story points.</p>
<p class="br"><br /></p>

<p>I'm sure you're familiar with this method.</p>
<p class="br"><br /></p>

<p>So there are story points assigned to each user story.</p>
<p class="br"><br /></p>

<p>The total number of story points that the team can complete in a sprint is called the velocity and the team uses the velocity to plan its next sprint.</p>
<p class="br"><br /></p>

<p>Note that if everything is ready going into Sprint planning this takes 15 minutes.</p>
<p class="br"><br /></p>

<p>It should not be a long discussion.</p>
<p class="br"><br /></p>

<p>Now the pro approach to this is to use historical throughput data to create a forecast and so that means that no estimation is needed whatsoever.</p>
<p class="br"><br /></p>

<p>And you can look at the refinement module to get more information about that.</p>
<p class="br"><br /></p>

<p>Now there's an intermediate approach between the standard approach and the pro approach where you simply focus on recognizing that there is variance.</p>
<p class="br"><br /></p>

<p>Remember that the standard approach says this is how many points we can finish and at an average estimate. It doesn't recognize that sometimes you'll finish fewer points and sometimes you'll finish more.</p>
<p class="br"><br /></p>

<p>So if you're moving from the standard approach and want to get a more in-depth understanding of what's possible during a sprint that's the next step that I would suggest that you recognize the varience.</p>
<p class="br"><br /></p>

<p>Remember that no matter what approach you use that development team decides the work that can be taken into the sprint. This is part of the scrum pull system.</p>

<p>The PO does not push work to the team the development team decides.</p>
<p class="br"><br /></p>
<p class="br"><br /></p>
<p class="br"><br /></p>

<p>Simply understanding this variance gives you a much richer understanding of the capacity of the team and it helps you make better decisions.</p>
<p class="br"><br /></p>

<p>Another key practice is to create a task board. It is typically user stories or PBIs with tasks.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic35.png" alt="" id="pastedgraphic35" style="width:100%;" /></div>
<p class="br"><br /></p>
<p class="br"><br /></p>

<p>The standard approach is to have three columns: to do, in progress, done or not started, in progress, done as you see here.</p>
<p class="br"><br /></p>

<p>Note that during the Sprint planning meeting the development team does not need to think about all of the tasks.</p>
<p class="br"><br /></p>

<p>So you see here they've got tasks only for the top three of the user stories in the Sprint. They will add tasks during the sprint.</p>

<p>So that's the standard approach.</p>
<p class="br"><br /></p>

<p>I'm going to suggest two ways to enhance this.</p>
<p class="br"><br /></p>

<p>Way number one is to think about the board not just as a To Do list but as a model of the way of working.</p>

<p>So here you see a more sophisticated board which shows information that is expedited, active projects and maintenance and support.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic36.png" alt="" id="pastedgraphic36" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>In addition there is a review section where the work is reviewed first that's in progress then it's</p>

<p>done and then before the work gets started there's a design and triage stage.</p>
<p class="br"><br /></p>

<p>So whatever it is that you're actually doing to finish the work the process from the commit point to the finish point is what you represent on the board.</p>

<p>This gives you a much richer understanding of your way of work and more visibility.</p>

<p>And then you can use this information to improve the way of work which would then cause you to change the board.</p>
<p class="br"><br /></p>

<p>A second thing I want to suggest to you is that just as the development team is tracking its work us the product owner can also visualize your work.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic37.png" alt="" id="pastedgraphic37" style="width:100%;" /></div>

<p>So in determining the business value module in this course we talked about hypothesis driven development in which you as a product owner validate the user stories and the work that you're doing. That precedes the development work in the sprint and then afterwards you validate that you've actually created the business value.</p>

<p>You run an experiment and either accept or reject.</p>
<p class="br"><br /></p>

<p>And so normally development teams just visualize the work inside of the delivery part.</p>

<p>What I'm suggesting is that you visualize the entire end to end system.</p>
<p class="br"><br /></p>

<p>So here's an example of that.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic38.png" alt="" id="pastedgraphic38" style="width:100%;" /></div>
<p class="br"><br /></p>

<p>You start off with a pool of ideas maybe you create a business case maybe you do requirements analysis and so on and so forth. And then finally you commit.</p>
<p class="br"><br /></p>

<p>So normally you would only show this part on your task board. What I'm suggesting is that you show the upstream work here and then you also show downstream work after the work has been delivered to the customer and you're validating the business value.</p>
<p class="br"><br /></p>

<p>So here's another way of showing that. You start off with persona's.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic39.png" alt="" id="pastedgraphic39" style="width:100%;" /></div>

<p>You describe user journeys through the system.</p>
<p class="br"><br /></p>

<p>You then break it down into epics you do design you decide on constraints.</p>

<p>And then finally you move into a sprint.</p>
<p class="br"><br /></p>

<p>So normally all of his upstream work is not visualized and I'm suggesting that you might want to visualize it.</p>
<p class="br"><br /></p>

<p>So this is how work will be delivered.</p>
<p class="br"><br /></p>

<p>Let's go on finally to the Sprint goal.</p>
<p class="br"><br /></p>

<p>Here's a great template from Roman Pichler dot com which describes a way to represent or capture the Sprint goal.</p>
<p class="br"><br /></p>
<div class="ps3"><img src="images/PastedGraphic40.png" alt="" id="pastedgraphic40" style="height:567px;width:514px;" /></div>
<p class="br"><br /></p>

<p>The goal itself is here - just a couple of sentences.</p>

<p>No need to get super elaborate.</p>

<p>And then how the goal is being met in a broad sense and what metrics are being used.</p>
<p class="br"><br /></p>

<p>So here are some bad examples of a sprint goal.</p>
<p class="br"><br /></p>

<ul>
<li>finish all the users stories</li>
<li>don't produce any bugs</li>
<li>Collaborate effectively with design.</li>
</ul>
<p class="br"><br /></p>

<p>So typically those won't be Sprint goals - Sprint goals are about delivery and value creation.</p>
<p class="br"><br /></p>

<p>So good examples are.</p>
<p class="br"><br /></p>

<ul>
<li>The customer can pay with a credit card.</li>
<li>Customers can log in</li>
<li>Small business customers can see receivables</li>
</ul>
<p class="br"><br /></p>

<p>And remember the Sprint goal is a collaborative effort by the entire scrum team.</p>
<p class="br"><br /></p>

<p>There are many ideas here that you can run by me and we can figure out how to get them to work for you on your team.</p>
<p class="br"><br /></p>

<p>Enjoy the.</p>
</div>
<p class="separator"><br /></p>
<div class="sub-headed-section">
<h4 class="sub-heading" id="doc133">SPRINT REVIEW</h4>

<p>Let's start off with the really big hit right here at the start.</p>

<p>The Sprint review is held at the end of the sprint with the goal to inspect the increment - that's the software product, and adapt the product backlog if needed.</p>
<p class="br"><br /></p>

<p>That comes as a surprise to many product owners who view the Sprint review as being a demo.</p>
<p class="br"><br /></p>

<p>A demo is a way to inspect the product and adapt the product backlog.</p>

<p>But it's not the only way.</p>

<p>And it's almost certainly not the only activity that you should do during this sprint review.</p>

<p>We'll discuss that in great detail in this section.</p>
<p class="br"><br /></p>

<p>So during the Sprint review the scrum team that's everyone's scrum master, product owner, development team and the stakeholders collaborate on what has been done on the sprint and they decide on changes to be made to the product backlog.</p>

<p>The scrum product owner of course owns the product backlog.</p>

<p>But anyone can provide input including writing PBIs.</p>
<p class="br"><br /></p>

<p>It's a four hour time box meeting for a one month sprint.</p>

<p>That means that it would be time box to two hours for a two week sprint.</p>
<p class="br"><br /></p>

<p>So here's what the scrum guide says in detail about what elements are part of the Sprint review.</p>

<p>It's open to stakeholders. It's an open meeting.</p>
<p class="br"><br /></p>

<p>The product owner and only the product owner decides what has been done and what has not been done.</p>

<p>No one else can tell the product owner what needs to be moved into the done column.</p>
<p class="br"><br /></p>

<p>Now the development team discusses what went well what problems it ran into what problems were solved.</p>

<p>This is from the product perspective.</p>

<p>It's different from the retrospective which focuses on the scrum team. </p>
<p class="br"><br /></p>

<p>The development team here to discusses what went well regarding the product. What went poorly regarding the product and what problems it solved regarding the product.</p>
<p class="br"><br /></p>

<p>Now the team if it wants to does a demo right this is what often people think the Sprint review is about. But that's only one component. It's one way to inspect the increment. </p>
<p class="br"><br /></p>

<p>The product owner discusses the product backlog and then critically projects completion dates.</p>

<p>We'll discuss that in detail.</p>
<p class="br"><br /></p>

<p>This is one of the things that's done in the review so you review not only what's going on with the Sprint and what was done and what was not done but also various projections and scope and date and probabilities regarding the entire product backlog.</p>

<p>And then the entire group including the stakeholders provides input to the product owner on the product backlog.</p>
<p class="br"><br /></p>

<p>The product owner reviews the marketplace.</p>

<p>That often means reviewing how the customer has responded to previous releases.</p>
<p class="br"><br /></p>

<p>And then finally the product owner is responsible for ROI.</p>

<p>So the product owner reviews the timeline, the budget, the market place.</p>
<p class="br"><br /></p>

<p>So the output of the Sprint review is a new product backlog.</p>
<p class="br"><br /></p>

<p>So here are some of the critical points here.</p>
<p class="br"><br /></p>

<ul>
<li>Number one the Sprint review is not the same thing as a demo.</li>
</ul>
<p class="br"><br /></p>

<p>So here are some of the other things that happen in the sprint review:</p>

<ul>
<li>The P.O. can project completion dates</li>
<li>The P.O can discuss the current product and the marketplace and</li>
<li>the development team discusses product related challenges.</li>
</ul>
<p class="br"><br /></p>

<p>All of those things are part of the Sprint review.</p>
<p class="br"><br /></p>

<p>Now if your Sprint review does not contain all of these elements you may find yourself having many additional meetings and having lots of loose ends.</p>

<p>So consider creating a rich full sprint review with all of these items.</p>
<p class="br"><br /></p>

<p>Let's drill into the details.</p>

<p>Let's talk about the practice of inviting attendees.</p>

<p>The Sprint review is an open meeting so anyone can attend.</p>

<p>That's the typical working agreement and in particular stakeholders are asked to attend. So stakeholders can provide input on backlog items and the product owner is responsible for communicating with stakeholders about backlog changes, about releases, about ROI.</p>
<p class="br"><br /></p>

<p>The product owner explains what has been done.</p>
<p class="br"><br /></p>

<p>This typically reviews the Sprint goal, the product owner has to do this the product or is responsible for knowing what PBIs were done and not done or being intimately familiar with the work of the development team.</p>
<p class="br"><br /></p>

<p>It's not the development team announcing what has been done and not done - only the product owner can decide what has been finished. Only the product owner can so to speak and drag things into the done column and then the development team can do a demo and it answers any questions.</p>
<p class="br"><br /></p>

<p>So this is not a PowerPoint type of presentation. It's not a dog and pony show.</p>

<p>This is a get down and dirty with the actual product.</p>
<p class="br"><br /></p>

<p>So if you are helping the development team or you're talking to the development team make sure that you tell them that you want to see all sorts of tests of the product not just the happy path.</p>
<p class="br"><br /></p>

<p>Now many people think that the review is just the demo but remember it's only a part and then the development team discusses what went well during the sprint and what problems it ran into and how those problems were solved - From a product perspective.</p>
<p class="br"><br /></p>

<p>So this is not about the team examining itself. That's what happens in the retrospective. This is about the development team discussing what issues it ran into regarding the product.</p>
<p class="br"><br /></p>

<p>And so this is an opportunity for you the product owner to learn about what the development team finds easy and what it finds difficult.</p>

<p>And this is input into your product backlog. You obviously want to avoid things that the development team finds difficult or find ways of helping them answer that question.</p>
<p class="br"><br /></p>

<p>Projected completion dates I'm going to split this up into three parts.</p>
<p class="br"><br /></p>

<p>There are some teams that do scope-box releases. that's the PO has decided that so much stuff needs to be done in order for the project to be released. In this case I recommend that you forecast completion dates with the entire probability distribution as we've discussed in previous sections so you might say there's a 30 percent chance the backlog will be finished by June 30<sup>th</sup>, an 80 percent chance that it will be finished by July 30<sup>th</sup> and a 95 percent chance that it will be finished by August 30<sup>th</sup>.</p>

<p>So give the entire probability distribution. Don't just give the expected date. And then for teams which release continually say teams that have seen CI/CD continuous integration continues deployment where they release every day or are they release every week forecast the scope that will be completed over an appropriate period of time.</p>

<p>What's appropriate will depend on your team in your organization, What do the stakeholders want to know - typically it's a few weeks to a few months.</p>

<p>And again when you forecast the scope take into account variance - don't just use average scope. Provide the entire probability distribution. And then for teams which release on a particular date write say a team that has a release on December thirty first because it's building a tax product that needs to be ready for it January 1st.</p>

<p>Forecast what scope will be completed by that date and again give the entire probability distribution - say there is an 80 percent chance that 20 PBIs will be done and a 95 percent chance that 25 PBIs could be done.</p>
<p class="br"><br /></p>

<p>And then finally take stakeholder input into account when deciding how to project completion dates and what information to display - what do the stakeholders really care about?</p>
<p class="br"><br /></p>

<p>And then you collaborate on what to do next. What is the product backlog for the next sprint going to look like. And this is a discussion with everyone.</p>

<p>A stakeholder and say hey what about this I really want this to be a higher priority in the backlog.</p>

<p>Or can you add this PBI? Now as you're thinking about this ask yourself does this meeting replace other meetings that you are having?</p>
<p class="br"><br /></p>

<p>Very often I see product owners go one on one from stakeholder to stakeholder to stakeholder and if that works for you keep doing it.</p>
<p class="br"><br /></p>

<p>But having a group discussion often helps to resolve issues much more quickly and it replaces other meetings.</p>

<p>It also will help stakeholders see the big picture so that they all don't think that their priority is the number one priority.</p>

<p>They'll hear from each other and that horse trading will take place inside of that meeting.</p>

<p>This might require you to change some of the habits of the organization or some of the cultura.</p>
<p class="br"><br /></p>

<p>The review of the marketplace.</p>

<p>This is super important and it goes to the strategic value that the product owner provides.</p>

<p>So you'll recall that in a previous module we talked about hypothesis driven development.</p>

<p>Here's where you discuss what assumptions have been validated or invalidated what have you learned about the customer. So this is the back end piece - once you've released something that's a probe of the market place.</p>

<p>What have you learned about the customers? What do customers think about your last release? has that value that you expected been delivered?</p>

<p>So review the market place and what's going on there and how you're tracking it.</p>
<p class="br"><br /></p>

<p>And then finally as the PO are you own the ROI of the product, you are the CEO of the product, so you need to review the timeline and the budget.</p>

<p>You should know how much it cost to run the scrum team for a week or for a sprint. If you have a budget that you need to hit is the effort within the budget?</p>

<p>So this is a strategic operational level view of the team.</p>

<p>Does that include new people that are joining the team?</p>

<p>Does it include vacation? All of those things go into this conversation.</p>
<p class="br"><br /></p>

<p>So that's the review.</p>
<p class="br"><br /></p>

<p>I imagine that this has provided you with information that will cause you to review how you're brining your review today to expand it to something that's beyond the demo.</p>
<p class="br"><br /></p>

<p>Remember the Sprint review is about inspecting and adapting the product and the product backlog.</p>
</div>

</body>
</html>
